#include "Xcp_Cfg.h"
{% for configuration in configurations %}
#ifndef {{configuration.communication.channel_rx_pdu_ref}}
#warning {{configuration.communication.channel_rx_pdu_ref}} not defined, assigning 0x0001u as default value. This definition should be passed trough the build system ({{configuration.communication.channel_rx_pdu_ref}}=0xXXXX).
#define {{configuration.communication.channel_rx_pdu_ref}} (0x0001u)
#endif /* #ifndef {{configuration.communication.channel_rx_pdu_ref}} */

#ifndef {{configuration.communication.channel_tx_pdu_ref}}
#warning {{configuration.communication.channel_tx_pdu_ref}} not defined, assigning 0x0002u as default value. This definition should be passed trough the build system ({{configuration.communication.channel_tx_pdu_ref}}=0xXXXX).
#define {{configuration.communication.channel_tx_pdu_ref}} (0x0002u)
#endif /* #ifndef {{configuration.communication.channel_tx_pdu_ref}} */
{%- endfor %}
{% set default_pdu_mapping = namespace(value=3) %}
{%- for configuration in configurations %}
    {%- set configuration_loop = loop %}
    {%- for daq in configuration.daqs %}
        {%- for dto in daq.dtos %}
#ifndef {{dto.pdu_mapping}}
#warning {{dto.pdu_mapping}} not defined, assigning {{'0x%04Xu' % default_pdu_mapping.value}} as default value. This definition should be passed trough the build system ({{dto.pdu_mapping}}=0xXXXX).
#define {{dto.pdu_mapping}} ({{'0x%04Xu' % default_pdu_mapping.value}})
#endif /* #ifndef {{dto.pdu_mapping}} */
            {%- set default_pdu_mapping.value = default_pdu_mapping.value + 1 %}
        {% endfor %}
    {%- endfor %}
{%- endfor %}
{%- for configuration in configurations %}
    {%- set configuration_loop = loop %}
    {%- for daq in configuration.daqs %}
        {%- set daq_loop = loop %}
        {%- for i in range(daq.max_odt) %}
#define Xcp_START_SEC_VAR_FAST_POWER_ON_INIT_UNSPECIFIED
#include "Xcp_MemMap.h"

static Xcp_OdtEntryType Xcp_OdtEntryConfig{{'%02X' % configuration_loop.index0}}Daq{{'%02X' % daq_loop.index0}}Odt{{'%02X' % i}}[{{'0x%02Xu' % daq.max_odt_entries}}] = {
            {%- for j in range(daq.max_odt_entries) %}
    {
        NULL_PTR, /* XcpOdtEntryAddress */
        0x00u, /* XcpOdtEntryBitOffset */
        0x00u, /* XcpOdtEntryLength */
        {{'0x%02Xu' % j}} /* XcpOdtEntryNumber */
    },
            {%- endfor %}
};

#define Xcp_STOP_SEC_VAR_FAST_POWER_ON_INIT_UNSPECIFIED
#include "Xcp_MemMap.h"
        {% endfor %}
    {%- endfor %}
{%- endfor %}
{%- for configuration in configurations %}
    {%- set configuration_loop = loop %}
    {%- for daq in configuration.daqs %}
        {%- set daq_loop = loop %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static Xcp_OdtType Xcp_OdtConfig{{'%02X' % configuration_loop.index0}}Daq{{'%02X' % daq_loop.index0}}[{{'0x%02Xu' % daq.max_odt}}] = {
        {%- for i in range(daq.max_odt) %}
    {
        0x07u, /* hard-coded XcpOdtEntryMaxSize */
        {{'0x%02Xu' % i}}, /* XcpOdtNumber */
        0x00u, /* XcpOdt2DtoMapping */
        &Xcp_OdtEntryConfig{{'%02X' % configuration_loop.index0}}Daq{{'%02X' % daq_loop.index0}}Odt{{'%02X' % i}}[0x00u] /* reference to XcpOdtEntry */
    },
        {%- endfor %}
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
    {% endfor %}
{%- endfor %}
{%- for configuration in configurations %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static const Xcp_RxPduType Xcp_CommunicationChannelRxPduConfig{{'%02X' % loop.index0}} = {
    {{configuration.communication.channel_rx_pdu_ref}}, /* XcpRxPduId */
    NULL_PTR /* hard-coded XcpRxPduRef */
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
{% endfor %}
{%- for configuration in configurations %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static const Xcp_TxPduType Xcp_CommunicationChannelTxPduConfig{{'%02X' % loop.index0}} = {
    {{configuration.communication.channel_tx_pdu_ref}}, /* XcpTxPduId */
    NULL_PTR /* hard-coded XcpTxPduRef */
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
{% endfor %}
{%- for configuration in configurations %}
    {%- set configuration_loop = loop %}
    {%- for daq in configuration.daqs %}
static const Xcp_DtoType Xcp_DtoConfig{{'%02X' % configuration_loop.index0}}Daq{{'%02X' % loop.index0}}[{{'0x%02Xu' % daq.dtos|length}}] = {
        {%- for dto in daq.dtos %}
    {
        {{'0x%04Xu' % dto.pid}}, /* XcpDtoPid */
        {{dto.pdu_mapping}} /* XcpDto2PduMapping */
    },
        {%- endfor %}
};
    {% endfor %}
{%- endfor %}
{%- for configuration in configurations %}
    {%- set configuration_loop = loop %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static Xcp_DaqListType Xcp_DaqListConfig{{'%02X' % loop.index0}}[{{'0x%02Xu' % configuration.daqs|length}}] = {
    {%- for daq in configuration.daqs %}
    {
        {{'0x%04Xu' % loop.index0}}, /* XcpDaqListNumber */
        {{daq.type}}, /* XcpDaqListType */
        {{'0x%02Xu' % daq.max_odt}}, /* XcpMaxOdt */
        {{'0x%02Xu' % daq.max_odt_entries}}, /* XcpMaxOdtEntries */
        &Xcp_DtoConfig{{'%02X' % configuration_loop.index0}}Daq{{'%02X' % loop.index0}}[0x00u], /* reference to XcpDto */
        {{'0x%08Xu' % daq.dtos|length}}, /* not part of the specification... */
        &Xcp_OdtConfig{{'%02X' % configuration_loop.index0}}Daq{{'%02X' % loop.index0}}[0x00u] /* reference to XcpOdt */
    },
    {%- endfor %}
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
{% endfor %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static const Xcp_CommunicationChannelType Xcp_CommunicationChannelConfig[{{'0x%02Xu' % configurations|length}}] = {
{%- for configuration in configurations %}
    {
        &Xcp_CommunicationChannelRxPduConfig{{'%02X' % loop.index0}}, /* reference to XcpChannelRxPduRef */
        &Xcp_CommunicationChannelTxPduConfig{{'%02X' % loop.index0}}, /* reference to XcpChannelTxPduRef */
        NULL_PTR /* hard-coded XcpComMChannelRef */
    },
{%- endfor %}
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
{% for configuration in configurations %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static Xcp_ConfigType Xcp_ConfigConfig{{'%02X' % loop.index0}} = {
    &Xcp_CommunicationChannelConfig[{{'0x%02Xu' % loop.index0}}], /* reference to XcpCommunicationChannel */
    &Xcp_DaqListConfig{{'%02X' % loop.index0}}[0x00u], /* reference to XcpDaqList */
    NULL_PTR, /* reference to XcpEventChannel */
    NULL_PTR /* reference to XcpPdu */
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
{% endfor %}
{%- for configuration in configurations %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

static Xcp_GeneralType Xcp_GeneralConfig{{'%02X' % loop.index0}} = {
    DAQ_STATIC, /* hard-coded XcpDaqConfigType */
    {{'0x%04Xu' % configuration.daqs|length}}, /* XcpDaqCount */
    TRUE, /* hard-coded XcpDevErrorDetect */
    FALSE, /* hard-coded XcpFlashProgrammingEnabled */
    ABSOLUTE, /* hard-coded XcpIdentificationFieldType */
    1000000, /* hard-coded XcpMainFunctionPeriod */
    0x07u, /* hard-coded XcpMaxCto */
    0x07u, /* hard-coded XcpMaxDto */
    {{'0x%04Xu' % configuration.events|length}}, /* XcpMaxEventChannel */
    0x00u, /* hard-coded XcpMinDaq */
    0x00u, /* hard-coded XcpOdtCount */
    0x00u, /* hard-coded XcpOdtEntriesCount */
    0x00u, /* hard-coded XcpOdtEntrySizeDaq */
    0x00u, /* hard-coded XcpOdtEntrySizeStim */
    TRUE, /* hard-coded XcpOnCanEnabled */
    FALSE, /* hard-coded XcpOnCddEnabled */
    FALSE, /* hard-coded XcpOnEthernetEnabled */
    FALSE, /* hard-coded XcpOnFlexRayEnabled */
    FALSE, /* hard-coded XcpPrescalerSupported */
    FALSE, /* hard-coded XcpSuppressTxSupport */
    0x0001u, /* hard-coded XcpTimestampTicks */
    FOUR_BYTE, /* hard-coded XcpTimestampType */
    TIMESTAMP_UNIT_1MS, /* hard-coded XcpTimestampUnit */
    TRUE, /* hard-coded XcpVersionInfoApi */
    NULL_PTR, /* hard-coded XcpCounterRef */
    NULL_PTR, /* hard-coded XcpNvRamBlockIdRef */
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
{% endfor %}
#define Xcp_START_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"

const Xcp_Type Xcp[{{'0x%02Xu' % configurations|length}}] =
{
{%- for configuration in configurations %}
    {
        &Xcp_ConfigConfig{{'%02X' % loop.index0}}, /* reference to XcpConfig */
        &Xcp_GeneralConfig{{'%02X' % loop.index0}}, /* reference to XcpGeneral */
    },
{%- endfor %}
};

#define Xcp_STOP_SEC_CONST_UNSPECIFIED
#include "Xcp_MemMap.h"
