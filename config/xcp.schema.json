{
  "type": "object",
  "properties": {
    "configurations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "communication": {
            "description": "This container represents the configuration of the communication channel of XCP (see ECUC_Xcp_00183)",
            "type": "object",
            "properties": {
              "channel_rx_pdu_ref": {
                "description": "Optional reference to the XCP Rx PDU (see ECUC_Xcp_00185)",
                "type": "string",
                "pattern": "[A-Z_][A-Z0-9_]*"
              },
              "channel_tx_pdu_ref": {
                "description": "Reference to the XCP Tx PDU (see ECUC_Xcp_00184)",
                "type": "string",
                "pattern": "[A-Z_][A-Z0-9_]*"
              },
              "com_m_channel_ref": {
                "description": "Reference to the ComM channel the PDUs belong to (see ECUC_Xcp_00186)",
                "type": "string",
                "pattern": "[A-Z_][A-Z0-9_]*"
              }
            },
            "required": [
              "channel_rx_pdu_ref",
              "channel_tx_pdu_ref"
            ]
          },
          "events": {
            "description": "This container contains the configuration of event channels on the XCP slave (see ECUC_Xcp_00150)",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "consistency": {
                  "description": "Type of consistency used by event channel (see ECUC_Xcp_00171)",
                  "type": "string",
                  "enum": [
                    "DAQ",
                    "EVENT",
                    "ODT"
                  ],
                  "default": "ODT"
                },
                "priority": {
                  "description": "Priority of the event channel",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255
                },
                "time_cycle": {
                  "description": "The event channel time cycle indicates which sampling period is used to\nprocess this event channel. A value of 0 means 'Not cyclic' (see ECUC_Xcp_00173)",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255
                },
                "time_unit": {
                  "description": "This configuration parameter indicates the unit of the event channel time cycle (see ECUC_Xcp_00174)",
                  "type": "string",
                  "enum": [
                    "TIMESTAMP_UNIT_1S",
                    "TIMESTAMP_UNIT_1MS",
                    "TIMESTAMP_UNIT_10MS",
                    "TIMESTAMP_UNIT_100MS",
                    "TIMESTAMP_UNIT_1US",
                    "TIMESTAMP_UNIT_10US",
                    "TIMESTAMP_UNIT_100US",
                    "TIMESTAMP_UNIT_1NS",
                    "TIMESTAMP_UNIT_10NS",
                    "TIMESTAMP_UNIT_100NS",
                    "TIMESTAMP_UNIT_1PS",
                    "TIMESTAMP_UNIT_10PS",
                    "TIMESTAMP_UNIT_100PS"
                  ]
                },
                "type": {
                  "description": "This configuration parameter indicates what kind of DAQ list can be allocated to this event channel (see ECUC_Xcp_00172)",
                  "type": "string",
                  "enum": [
                    "DAQ",
                    "DAQ_STIM"
                  ],
                  "default": "DAQ"
                },
                "triggered_daq_list_ref": {
                  "description": "References all DAQ lists that are trigged by this event channel (see ECUC_Xcp_00151)",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "priority",
                "time_cycle",
                "time_unit",
                "triggered_daq_list_ref"
              ]
            },
            "minItems": 1,
            "maxItems": 65534
          },
          "daqs": {
            "description": "This container contains the configuration of the DAQs.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the DAQ used as a reference within /configurations[x]/events[x]/triggered_daq_list_ref",
                  "type": "string",
                  "pattern": "[A-Z_][A-Z0-9_]*"
                },
                "type": {
                  "description": "This indicates whether this DAQ list represents a DAQ or a STIM (see ECUC_Xcp_00052)",
                  "type": "string",
                  "enum": [
                    "DAQ",
                    "DAQ_STIM",
                    "STIM"
                  ]
                },
                "max_odt": {
                  "description": "MAX_ODT indicates the maximum amount of ODTs in this DAQ list (STATIC configuration) (see ECUC_Xcp_00053)",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 252
                },
                "max_odt_entries": {
                  "description": "This parameter indicates the maximum amount of entries in an ODT of this DAQ list (STATIC configuration) (see ECUC_Xcp_00058)",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255
                },
                "dtos": {
                  "description": "This container collects data transfer object specific parameters for the DAQ list (see ECUC_Xcp_00065)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pid": {
                        "description": "Packet identifier (PID) of the DTO that identifies the ODT the content of the DTO (see ECUC_Xcp_00066)",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 251
                      },
                      "pdu_mapping": {
                        "description": "This reference specifies the mapping of the DTO to the PDUs from the lower-layer interfaces (CanIf, FrIf, SoAd and Cdd). A reference to a XcpRxPdu is only feasible if the the DaqListType is DAQ_STIM. A reference to a XcpTxPdu is only feasible if the DaqListType is DAQ (see ECUC_Xcp_00067)",
                        "type": "string",
                        "pattern": "[A-Z_][A-Z0-9_]*"
                      }
                    },
                    "required": [
                      "pid",
                      "pdu_mapping"
                    ]
                  },
                  "minItems": 0
                }
              },
              "required": [
                "name",
                "type",
                "max_odt",
                "max_odt_entries",
                "dtos"
              ]
            },
            "minItems": 1
          },
          "apis": {
            "description": "This container allows the user to enable/disable optional APIs from the driver. This is not part of the specification",
            "type": "object",
            "properties": {
              "xcp_set_request_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_id_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_seed_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_unlock_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_set_mta_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_download_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_download_max_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_short_download_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_set_cal_page_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_cal_page_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_clear_daq_list_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_set_daq_ptr_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_write_daq_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_set_daq_list_mode_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_daq_list_mode_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_start_stop_daq_list_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_start_stop_synch_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_daq_clock_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_read_daq_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_daq_processor_info_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_daq_resolution_info_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_daq_list_info_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_daq_event_info_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_free_daq_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_alloc_daq_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_alloc_odt_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_alloc_odt_entry_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_program_clear_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_program_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_program_max_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "xcp_get_comm_mode_info_api_enable": {
                "$ref": "#/definitions/api_activation_information"
              },
              "resource_protection": {
                "type": "object",
                "properties": {
                  "calibration_paging": {
                    "type": "boolean",
                    "default": false
                  },
                  "data_acquisition": {
                    "type": "boolean",
                    "default": false
                  },
                  "data_stimulation": {
                    "type": "boolean",
                    "default": false
                  },
                  "programming": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "calibration_paging",
                  "data_acquisition",
                  "data_stimulation",
                  "programming"
                ]
              }
            },
            "required": [
              "xcp_set_request_api_enable",
              "xcp_get_id_api_enable",
              "xcp_get_seed_api_enable",
              "xcp_unlock_api_enable",
              "xcp_set_mta_api_enable",
              "xcp_download_api_enable",
              "xcp_download_max_api_enable",
              "xcp_short_download_api_enable",
              "xcp_set_cal_page_api_enable",
              "xcp_get_cal_page_api_enable",
              "xcp_clear_daq_list_api_enable",
              "xcp_set_daq_ptr_api_enable",
              "xcp_write_daq_api_enable",
              "xcp_set_daq_list_mode_api_enable",
              "xcp_get_daq_list_mode_api_enable",
              "xcp_start_stop_daq_list_api_enable",
              "xcp_start_stop_synch_api_enable",
              "xcp_get_daq_clock_api_enable",
              "xcp_read_daq_api_enable",
              "xcp_get_daq_processor_info_api_enable",
              "xcp_get_daq_resolution_info_api_enable",
              "xcp_get_daq_list_info_api_enable",
              "xcp_get_daq_event_info_api_enable",
              "xcp_free_daq_api_enable",
              "xcp_alloc_daq_api_enable",
              "xcp_alloc_odt_api_enable",
              "xcp_alloc_odt_entry_api_enable",
              "xcp_program_clear_api_enable",
              "xcp_program_api_enable",
              "xcp_program_max_api_enable",
              "xcp_get_comm_mode_info_api_enable",
              "resource_protection"
            ]
          },
          "protocol_layer": {
            "description": "This container allows the user to specify protocol layer specific parameters. This is not part of the specification",
            "type": "object",
            "properties": {
              "byte_order": {
                "type": "string",
                "enum": [
                  "LITTLE_ENDIAN",
                  "BIG_ENDIAN"
                ],
                "default": "LITTLE_ENDIAN"
              },
              "address_granularity": {
                "type": "string",
                "enum": [
                  "BYTE",
                  "WORD",
                  "DWORD"
                ],
                "default": "DWORD"
              },
              "slave_block_mode": {
                "type": "boolean",
                "default": true
              },
              "max_cto": {
                "type": "integer",
                "minimum": 8,
                "maximum": 255,
                "default": 8
              },
              "max_dto": {
                "type": "integer",
                "minimum": 8,
                "maximum": 65535
              }
            },
            "required": [
              "byte_order",
              "address_granularity",
              "slave_block_mode",
              "max_cto",
              "max_dto"
            ]
          }
        },
        "required": [
          "communication",
          "events",
          "daqs",
          "apis",
          "protocol_layer"
        ],
        "additionalProperties": false
      },
      "minItems": 1
    }
  },
  "required": [
    "configurations"
  ],
  "definitions": {
    "api_activation_information": {
      "type": "boolean",
      "default": true
    }
  }
}
